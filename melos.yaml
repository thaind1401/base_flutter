name: basecleanflutter

packages:
  - ./**

ignore:
  - .fvm/**

command:
  bootstrap:
    runPubGetInParallel: false

scripts:
  # build runner build (updated for newer Flutter/Melos)
  build_all:
    run: melos exec --depends-on="build_runner" -- dart run build_runner build
    description: build_runner build all modules.

  build_data:
    run: melos exec --fail-fast --scope="*data*" --depends-on="build_runner" -- dart run build_runner build
    description: build_runner build data module.

  build_domain:
    run: melos exec --fail-fast --scope="*domain*" --depends-on="build_runner" -- dart run build_runner build
    description: build_runner build domain module.

  build_app:
    run: melos exec --fail-fast --scope="*app*" --depends-on="build_runner" -- dart run build_runner build
    description: build_runner build app module.

  build_shared:
    run: melos exec --fail-fast --scope="*shared*" --depends-on="build_runner" -- dart run build_runner build
    description: build_runner build shared module.

  # build runner watch (updated syntax)
  watch_all:
    run: melos exec --depends-on="build_runner" -- dart run build_runner watch
    description: build_runner watch all modules.

  watch_data:
    run: melos exec --fail-fast --scope="*data*" --depends-on="build_runner" -- dart run build_runner watch
    description: build_runner watch data module.

  watch_domain:
    run: melos exec --fail-fast --scope="*domain*" --depends-on="build_runner" -- dart run build_runner watch
    description: build_runner watch domain module.

  watch_app:
    run: melos exec --fail-fast --scope="*app*" --depends-on="build_runner" -- dart run build_runner watch
    description: build_runner watch app module.

  watch_shared:
    run: melos exec --fail-fast --scope="*shared*" --depends-on="build_runner" -- dart run build_runner watch
    description: build_runner watch shared module.

  # build runner build --delete-conflicting-outputs
  force_build_all:
    run: |
      echo "ðŸ”§ Building all modules with updated build_runner versions..."
      echo "ðŸ“¦ Building data module (build_runner 2.9.0)..."
      melos run force_build_data
      echo "ðŸ“¦ Building domain module (build_runner 2.9.0)..."
      melos run force_build_domain
      echo "ðŸ“¦ Building shared module (build_runner 2.9.0)..."
      melos run force_build_shared
      echo "ðŸ“¦ Building app module (build_runner 2.7.1)..."
      melos run force_build_app
      echo "âœ… All modules built successfully with compatible build_runner versions!"
    description: build_runner build all modules with updated compatible versions.

  force_build_data:
    run: melos exec --fail-fast --scope="*data*" --depends-on="build_runner" -- dart run build_runner build --delete-conflicting-outputs
    description: build_runner build data module.

  force_build_domain:
    run: melos exec --fail-fast --scope="*domain*" --depends-on="build_runner" -- dart run build_runner build --delete-conflicting-outputs
    description: build_runner build domain module.

  force_build_app:
    run: melos exec --fail-fast --scope="*app*" --depends-on="build_runner" -- dart run build_runner build --delete-conflicting-outputs
    description: build_runner build app module.

  force_build_shared:
    run: melos exec --fail-fast --scope="*shared*" --depends-on="build_runner" -- dart run build_runner build --delete-conflicting-outputs
    description: build_runner build shared module.

  # build runner watch --delete-conflicting-outputs (updated syntax)
  force_watch_all:
    run: melos exec --depends-on="build_runner" -- dart run build_runner watch --delete-conflicting-outputs
    description: build_runner watch all modules.

  force_watch_data:
    run: melos exec --fail-fast --scope="*data*" --depends-on="build_runner" -- dart run build_runner watch --delete-conflicting-outputs
    description: build_runner watch data module.

  force_watch_domain:
    run: melos exec --fail-fast --scope="*domain*" --depends-on="build_runner" -- dart run build_runner watch --delete-conflicting-outputs
    description: build_runner watch domain module.

  force_watch_app:
    run: melos exec --fail-fast --scope="*app*" --depends-on="build_runner" -- dart run build_runner watch --delete-conflicting-outputs
    description: build_runner watch app module.

  force_watch_shared:
    run: melos exec --fail-fast --scope="*shared*" --depends-on="build_runner" -- dart run build_runner watch --delete-conflicting-outputs
    description: build_runner watch shared module.

  l10n:
    run: melos exec --fail-fast --scope="*resources*" --flutter -- flutter pub run intl_utils:generate
    description: Generates l10n for all app packages.

  test:
    run: melos exec --fail-fast --dir-exists="test" -- flutter test
    description: Run all tests.

  pub_upgrade:
    run: melos exec --fail-fast -- flutter pub upgrade
    description: Run pub upgrade on all module.

  test_app:
    run: melos exec --fail-fast --scope="*app*" -- flutter test
    description: Run test app module.
  
  test_domain:
    run: melos exec --fail-fast --scope="*domain*" -- flutter test
    description: Run test domain module.
  
  test_data:
    run: melos exec --fail-fast --scope="*data*" -- flutter test
    description: Run test data module.
  
  test_shared:
    run: melos exec --fail-fast --scope="*shared*" -- flutter test
    description: Run test shared module.

  format:
    run: melos exec --fail-fast --flutter -- "find . -name "*.dart" ! -name "*.g.dart" ! -name "*.freezed.dart" ! -name "*.gr.dart" ! -name "*.config.dart" ! -name "*.mocks.dart" ! -name "*.mapper.dart" ! -path '*/generated/*' ! -path '*/.dart_tool/*' | tr '\n' ' ' | xargs dart format --set-exit-if-changed -l 100"
    description: Run format.

  metrics:
    run: melos exec --flutter -- dart run dart_code_metrics:metrics analyze lib
    description: Run metrics.

  metrics_app:
    run: melos exec --scope="*app*" --flutter -- dart run dart_code_metrics:metrics analyze lib
    description: Run metrics app.

  metrics_data:
    run: melos exec --scope="*data*" --flutter -- dart run dart_code_metrics:metrics analyze lib
    description: Run metrics data.

  metrics_domain:
    run: melos exec --scope="*domain*" --flutter -- dart run dart_code_metrics:metrics analyze lib
    description: Run metrics domain.

  metrics_shared:
    run: melos exec --scope="*shared*" --flutter -- dart run dart_code_metrics:metrics analyze lib
    description: Run metrics shared.
    
  analyze:
    run: melos exec --flutter -- flutter analyze --no-pub --suppress-analytics
    description: Run analyze.

  analyze_app:
    run: melos exec --scope="*app*" --flutter -- flutter analyze --no-pub --suppress-analytics
    description: Run analyze app.

  analyze_data:
    run: melos exec --scope="*data*" --flutter -- flutter analyze --no-pub --suppress-analytics
    description: Run analyze data.

  analyze_domain:
    run: melos exec --scope="*domain*" --flutter -- flutter analyze --no-pub --suppress-analytics
    description: Run analyze domain.

  analyze_shared:
    run: melos exec --scope="*shared*" --flutter -- flutter analyze --no-pub --suppress-analytics
    description: Run analyze shared.

  lint:
    run: melos run analyze && melos run metrics
    description: Run metrics and analyze.

  format_lint:
    run: melos run format && melos run lint
    description: Run format & analyze.

  test_coverage:
    run: melos exec --fail-fast --dir-exists="test" -- flutter test --coverage && lcov --remove coverage/lcov.info '**/*.freezed.dart' '**/*.g.dart' '**/*.graphql.dart' '**/*.part.dart' '**/*.config.dart' '**/*_event.dart' '**/*_state.dart' '**/generated/*' '**/routes/*' '**/l10n/*' '**/config/*' '**/di/*' -o coverage/lcov.info && genhtml coverage/lcov.info --output=coverage && open coverage/index.html
    description: Run test coverage.

  check_unused_files:
    run: melos exec -- dart run dart_code_metrics:metrics check-unused-files lib
    description: Run check unused files.

  pub_get_data:
    run: melos exec --fail-fast --scope="*data*" -- flutter pub get
    description: pub get data module.
    
  pub_get_domain:
    run: melos exec --fail-fast --scope="*domain*" -- flutter pub get
    description: pub get domain module.

  pub_get_app:
    run: melos exec --fail-fast --scope="*app*" -- flutter pub get
    description: pub get app module.

  pub_get_shared:
    run: melos exec --fail-fast --scope="*shared*" -- flutter pub get
    description: pub get shared module.

  check_unused_l10n_app:
    run: melos exec --fail-fast --scope="*app*" -- dart run dart_code_metrics:metrics check-unused-l10n lib -p ^S$
    description: check unused l10n app.

  check_unused_l10n_domain:
    run: melos exec --fail-fast --scope="*domain*" -- dart run dart_code_metrics:metrics check-unused-l10n lib -p ^S$
    description: check unused l10n domain.
